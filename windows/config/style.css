body {
  margin: 0;
  padding: 10px;

  background-color: rgb(255 255 255);
  color: rgb(10 10 10);

  font-family: Arial, Helvetica, sans-serif;
}

.dashboardContainer {
  padding: 20px;
  box-sizing: border-box;
  width: min(50%, 1000px);
  min-width: min(100%, 500px);
  margin: 0 auto;
  /* position: relative; */
}

.aiAssistOverlay + .dashboardContainer {
  display: none;
}

h1:first-child {
  margin-top: 0.3em;
}

.styledButton {
  display: inline-block;
  border-radius: 5px;
  padding: 5px 15px;
  font-size: 0.9em;
  color: inherit;
  border: 2px solid rgb(50 50 50);
  background-color: rgb(135 206 235 / 0.3);
  transition: background-color 0.2s, opacity 0.2s;
}

.styledButton:enabled {
  cursor: pointer;
}

.styledButton:enabled:hover {
  background-color: rgb(135 206 235 / 0.37);
}

.styledButton:enabled:active {
  background-color: rgb(135 206 235 / 0.25);
}

.styledButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.styledSelect {
  background-color: transparent;
  color: inherit;
  font: inherit;

  border: 1px solid rgb(128 128 128);
  border-radius: 4px;
}

.additionalConfigContext,
.additionalContext {
  display: block;
  font-size: 0.9em;
  color: rgb(86 86 86);
}

.additionalConfigContext {
  padding: 2px 0 0 30px;
}

.additionalContext {
  padding: 0 5px;
}

label + .additionalContext {
  margin-bottom: 5px;
}

button + .additionalContext {
  margin-top: 5px;
}

#saveBtnContainer {
  display: flex;
  align-items: center;
  gap: 10px;
}

#saveBtn[data-needs-save] {
  background-color: rgb(255 95 21 / 0.7);
}

#saveBtn[data-needs-save]:hover {
  background-color: rgb(255 95 21 / 0.77);
}

#saveBtn[data-needs-save]:active {
  background-color: rgb(255 95 21 / 0.65);
}

#saveBtnCheck {
  display: flex;
  align-items: center;
  gap: 4px;

  color: rgb(128 128 128);
  font-size: 0.9em;

  opacity: 0;

  transition: opacity 0.2s;
}

#saveBtnCheck[data-show] {
  opacity: 1;
}

#saveBtnCheck svg {
  width: 15px;
  height: 15px;
}

#studyContainer {
  display: flex;
  gap: 7px;
}

#configContainer {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

#aiQuestionAssistWrapper {
  margin-bottom: 5px;
}

#questionsWrapperOuter {
  display: flex;
}

#questionsWrapper {
  display: inline-block;
  position: relative;
  overflow: auto;

  border: 2px solid gray;
  border-radius: 5px;

  box-sizing: border-box;
  width: 100%;

  padding: 5px 0;
}

#flipQuestionsBtn {
  display: flex;
  position: absolute;
  z-index: 1;

  background-color: transparent;
  border: none;
  outline: none;

  padding: 0;
  cursor: pointer;

  transform: translate(-50%, -50%);

  filter: opacity(0.5);
  transition: filter 0.3s, transform 0.3s;
}

#flipQuestionsBtn,
.removeBtn {
  color: inherit;
}

#flipQuestionsBtn svg {
  width: 16px;
  height: 16px;
}

#flipQuestionsBtn:focus,
#flipQuestionsBtn:hover {
  filter: opacity(1);
}

#flipQuestionsBtn:focus-visible {
  transform: translate(-50%, -50%) scale(1.3);
}

#flipQuestionsBtn:active {
  transform: translate(-50%, -50%) scale(0.7);
}

#questionPreviews {
  position: relative;
  overflow: hidden;
  /* transition: height 0.5s, opacity 0.5s; */
  transition: height 0.3s;
}

#questionPreviews.importSuccess:not(.removing) {
  height: 50px !important;
  /* height: 100px !important; */
  /* opacity: 0; */
  /* animation: questionPreviewsShrinkDisappear 1s 0.2s forwards; */
}

#questionPreviews.importSuccess.removing {
  height: 0px;
  opacity: 0;
  transition: opacity 0.1s, height 0.2s;
}

#questionPreviewsInner {
  transition: opacity 0.3s;
}

#questionPreviews.importSuccess #questionPreviewsInner {
  opacity: 0;
}

/* #questionPreviews.importSuccess::before {
  content: "";

  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;
} */

#questionPreviews.importSuccess::after {
  content: "";

  position: absolute;
  /* top: 50%; */
  top: 0;
  left: 50%;

  width: 50px;
  height: 50px;

  /* https://flowbite.com/icons/ + https://yoksel.github.io/url-encoder/ */
  background-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' viewBox='0 0 24 24'%3E%3Cpath stroke='rgb(128 128 128)' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 11.917 9.724 16.5 19 7.5'/%3E%3C/svg%3E%0A");
  background-size: 100%;

  opacity: 0;
  transform: translateX(-50%);
  /* transform: translate(-50%, -50%); */

  /* animation: showImportSuccess 0.2s 0.2s forwards; */
  animation: showImportSuccess 0.2s forwards;
}

table#questions,
table.questionPreviewsTable {
  border-collapse: collapse;
  width: 100%;
}

.questionPreviewsTable {
  margin-bottom: 5px;
}

table#questions tr th:first-of-type,
table#questions tr td:first-of-type {
  padding-left: 10px;
}

table#questions tr td:last-of-type {
  padding-right: 10px;
  width: 35px;
  box-sizing: border-box;
}

table#questions thead .thInner,
table.questionPreviewsTable thead .thInner {
  position: relative;
}

table#questions thead .thInner::after,
table.questionPreviewsTable thead .thInner::after {
  content: "";
  display: block;
  position: absolute;

  width: 85%;
  height: 2px;

  left: 50%;
  transform: translateX(-50%);

  background: linear-gradient(
    to right,
    rgb(180 180 180 / 0) 0%,
    rgb(180 180 180 / 1) 25%,
    rgb(180 180 180 / 1) 75%,
    rgb(180 180 180 / 0) 100%
  );
}

table#questions tbody tr:nth-child(even),
table.questionPreviewsTable tbody tr:nth-child(even) {
  background-color: rgb(128 128 128 / 0.15);
}

table#questions th,
table#questions td,
table.questionPreviewsTable th,
table.questionPreviewsTable td {
  padding: 5px;
}

/* TODO: make `table.questionPreviewsTable tr` pointer on hover (for enable/disabling and moving) */

table.questionPreviewsTable thead tr th:not(:first-of-type) {
  width: 50%;
}

table#questions tbody tr td:nth-of-type(1) {
  padding-right: 8px;
}

table#questions tbody tr td:nth-of-type(2) {
  padding-left: 8px;
}

table.questionPreviewsTable tbody tr {
  cursor: move;
}

table.questionPreviewsTable tbody tr.moving {
  /* opacity: 0.5; */
  transform: scale(1.02);
  background-color: rgb(255 255 255);
  box-shadow: 2px 2px 5px rgb(0 0 0 / 0.5);
  /* background-image: repeating-linear-gradient(
    -45deg,
    rgb(128 128 128 / 0.15) 0px,
    rgb(128 128 128 / 0.15) 25px,
    rgb(255 255 255) 25px,
    rgb(255 255 255) 50px
  );
  background-size: 200%; */
  /* background-position: 0% 0%; */
  /* animation: trMovingAnim 1s infinite; */
}

table.questionPreviewsTable tbody tr:not([data-checked], .moving) {
  opacity: 0.3;
}

.includeCheckbox {
  cursor: pointer;
}

.customInputWrapper {
  position: relative;
}

.customInputWrapper::after {
  content: "";
  display: block;
  position: absolute;

  width: 100%;
  height: 2px;
  bottom: -1px;
  border-radius: 1px;

  background-color: rgb(160 160 160);
  opacity: 0;

  transform: scale(0, 100%);
  transform-origin: 20% 50%;

  transition: background-color 0.3s, transform 0.3s;
}

.customInputWrapper[data-focus]::after {
  opacity: 1;
  transform: scale(100%, 100%);
}

.customInput {
  border: none;
  outline: none;

  font: inherit;
  color: inherit;

  background-color: transparent;
  text-overflow: ellipsis;

  width: 100%;
  box-sizing: border-box;
}

table#questions tbody tr:last-of-type .removeBtn {
  visibility: hidden;
}

.removeBtn {
  display: flex;
  padding: 0;
  margin: 0 5px 0 3px;

  background-color: transparent;
  border: none;
  outline: none;

  cursor: pointer;

  filter: opacity(0.5);
  transition: filter 0.3s, transform 0.3s;
}

.removeBtn:focus,
.removeBtn:hover {
  filter: opacity(1);
}

.removeBtn:focus-visible {
  transform: scale(1.3);
}

.removeBtn svg {
  width: 12px;
  height: 12px;
  fill: blue;
  stroke: blue;
}

#quizRandomnessConfigContainer {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

#popQuizIntervalContainer {
  transition: opacity 0.2s;
}

#popQuizIntervalContainer[data-disabled] {
  opacity: 0.4;
}

#popQuizQuestionCount {
  width: 90px;
}

.aiAssistOverlay {
  position: absolute;
  z-index: 10;
  padding: 10px;
  /* top: 10px; */
  top: 0;
  left: 0;
  width: 100%;
  min-height: 100%;
  box-sizing: border-box;
  background-color: inherit;
}

.exitAssistBtn {
  display: flex;
  padding: 0;

  background-color: transparent;
  border: none;
  outline: none;
  color: inherit;

  cursor: pointer;

  position: absolute;
  top: 7px;
  left: 10px;
}

.exitAssistBtn svg {
  width: 30px;
  height: auto;
}

.styledLabel {
  display: block;
  font-weight: bold;
  margin-bottom: 5px;
}

.styledTextInput,
.styledTextarea {
  display: block;

  background-color: transparent;
  outline: none;
  color: inherit;
  font-size: 0.95em;
  font-family: inherit;

  border: 2px solid rgb(100 100 100);
  border-radius: 6px;

  padding: 4px 7px;

  transition: border-color 0.2s;
}

.styledTextInput:hover,
.styledTextarea:hover {
  border-color: rgb(128 128 128);
}

.styledTextInput:focus,
.styledTextarea:focus {
  border-color: rgb(225 225 225);
}

#openAiApiKey {
  width: 350px;
}

.aiQuestionAssistItemsWrapper {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

/* .genFromImgContainer {
  margin-top: 10px;
} */

.genFromImgAfterContainer {
  display: flex;
  flex-direction: column;
  gap: 10px;

  position: relative;
  overflow: hidden;

  border: 2px solid rgb(128 128 128 / 0.5);
  border-radius: 10px;

  padding: 10px;
}

.genFromImgFinalContainer {
  display: flex;
  gap: 7px;
}

.genFromImgBeforeContainer.hidden,
.genFromImgAfterContainer.hidden,
#filePreviews.hidden,
#questionPreviews.hidden {
  display: none;
}

.genFromImgAfterContainer.loading::before {
  content: "";

  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;

  background-color: rgb(255 255 255 / 0.8);
}

.genFromImgAfterContainer.loading::after {
  content: "";

  position: absolute;
  top: 50%;
  left: 50%;
  /* transform: translate(-50%, -50%); */

  width: 25px;
  height: 25px;
  border-radius: 50%;
  border-width: 6px;
  border-style: solid;
  border-color: rgb(128 128 128) rgb(128 128 128) transparent transparent;

  animation: loaderSpin 1s infinite linear;
}

#genFile {
  display: none;
}

#filePreviews {
  display: flex;
  gap: 6px;
  flex-wrap: wrap;
}

.filePreview {
  border-radius: 10px;
  background-color: #ffffff;
}

#customInstructions {
  width: 100%;
  min-height: 50px;
  max-height: 150px;
  resize: vertical;
  box-sizing: border-box;
}

/* .scrollDetectTop,
.scrollDetectBottom {
  position: absolute;
  left: 0;

  width: 100%;
  height: min(60px, 20%);

  background-color: blue;

  pointer-events: none;
} */

.scrollDetectTop {
  top: 0;
}

.scrollDetectBottom {
  bottom: 0;
}

@keyframes loaderSpin {
  from {
    transform: translate(-50%, -50%) rotate(0);
  }

  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

/* @keyframes questionPreviewsShrinkDisappear {
  to {
    height: 0px !important;
  }
} */

@keyframes showImportSuccess {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* @keyframes trMovingAnim {
  from {
    background-position: 0% 0%;
  }

  to {
    background-position: 100% 0%;
  }
} */

/* @keyframes trMovingAnim {
  from {
    background-image: repeating-linear-gradient(
      -45deg,
      rgb(128 128 128 / 0.15) 0px,
      rgb(128 128 128 / 0.15) 25px,
      rgb(255 255 255) 25px,
      rgb(255 255 255) 50px
    );
  }

  to {
    background-image: repeating-linear-gradient(
      -45deg,
      rgb(128 128 128 / 0.15) 25px,
      rgb(128 128 128 / 0.15) 50px,
      rgb(255 255 255) 50px,
      rgb(255 255 255) 75px
    );
  }
} */

@media (prefers-color-scheme: dark) {
  body {
    background-color: rgb(10 10 10);
    color: rgb(245 245 245);
  }

  .additionalConfigContext,
  .additionalContext {
    color: rgb(169 169 169);
  }

  table.questionPreviewsTable tbody tr.moving {
    /* background-color: rgb(128 128 128 / 0.3); */
    background-color: rgb(128 128 128 / 0.4);
  }

  .genFromImgAfterContainer.loading::before {
    background-color: rgb(0 0 0 / 0.8);
  }
}
